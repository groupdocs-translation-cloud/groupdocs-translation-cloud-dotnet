/*
 * GroupDocs.Translation.ApiGateway.Web
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using GroupDocs.Translation.Cloud.Sdk.Client;
using GroupDocs.Translation.Cloud.Sdk.Api;
// uncomment below to import models
//using GroupDocs.Translation.Cloud.Sdk.Model;

namespace GroupDocs.Translation.Cloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing TransportApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TransportApiTests : IDisposable
    {
        private TransportApi instance;

        public TransportApiTests()
        {
            instance = new TransportApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TransportApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TransportApi
            //Assert.IsType<TransportApi>(instance);
        }

        /// <summary>
        /// Test AutoPost
        /// </summary>
        [Fact]
        public void AutoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AutoPostRequest autoPostRequest = null;
            //var response = instance.AutoPost(autoPostRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test CsvPost
        /// </summary>
        [Fact]
        public void CsvPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CsvFileRequest csvFileRequest = null;
            //var response = instance.CsvPost(csvFileRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test DocumentPost
        /// </summary>
        [Fact]
        public void DocumentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TextDocumentFileRequest textDocumentFileRequest = null;
            //var response = instance.DocumentPost(textDocumentFileRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test DocumentRequestIdGet
        /// </summary>
        [Fact]
        public void DocumentRequestIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestId = null;
            //var response = instance.DocumentRequestIdGet(requestId);
            //Assert.IsType<CloudFileResponse>(response);
        }

        /// <summary>
        /// Test HcGet
        /// </summary>
        [Fact]
        public void HcGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.HcGet();
            //Assert.IsType<HealthCheckStatus>(response);
        }

        /// <summary>
        /// Test HtmlPost
        /// </summary>
        [Fact]
        public void HtmlPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sourceLanguage = null;
            //List<string> targetLanguages = null;
            //byte[] file = null;
            //string originalFileName = null;
            //string url = null;
            //string origin = null;
            //string savingMode = null;
            //string outputFormat = null;
            //var response = instance.HtmlPost(sourceLanguage, targetLanguages, file, originalFileName, url, origin, savingMode, outputFormat);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test HugoGet
        /// </summary>
        [Fact]
        public void HugoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.HugoGet(id);
            //Assert.IsType<CloudHugoResponse>(response);
        }

        /// <summary>
        /// Test HugoPost
        /// </summary>
        [Fact]
        public void HugoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream file = null;
            //string url = null;
            //var response = instance.HugoPost(file, url);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test ImageToFilePost
        /// </summary>
        [Fact]
        public void ImageToFilePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OcrFileRequest ocrFileRequest = null;
            //var response = instance.ImageToFilePost(ocrFileRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test ImageToTextPost
        /// </summary>
        [Fact]
        public void ImageToTextPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //List<string> targets = null;
            //string format = null;
            //string url = null;
            //int? rotate = null;
            //bool? isHandwritten = null;
            //string origin = null;
            //string route = null;
            //System.IO.Stream file = null;
            //var response = instance.ImageToTextPost(source, targets, format, url, rotate, isHandwritten, origin, route, file);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test LanguagesGet
        /// </summary>
        [Fact]
        public void LanguagesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.LanguagesGet();
            //Assert.IsType<List<LanguagePairData>>(response);
        }

        /// <summary>
        /// Test MarkdownPost
        /// </summary>
        [Fact]
        public void MarkdownPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sourceLanguage = null;
            //List<string> targetLanguages = null;
            //string outputFormat = null;
            //byte[] file = null;
            //string originalFileName = null;
            //string url = null;
            //string origin = null;
            //string savingMode = null;
            //List<List<string>> frontMatterList = null;
            //var response = instance.MarkdownPost(sourceLanguage, targetLanguages, outputFormat, file, originalFileName, url, origin, savingMode, frontMatterList);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test PdfPost
        /// </summary>
        [Fact]
        public void PdfPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PdfFileRequest pdfFileRequest = null;
            //var response = instance.PdfPost(pdfFileRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test PresentationPost
        /// </summary>
        [Fact]
        public void PresentationPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PresentationFileRequest presentationFileRequest = null;
            //var response = instance.PresentationPost(presentationFileRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test ResxPost
        /// </summary>
        [Fact]
        public void ResxPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ResxFileRequest resxFileRequest = null;
            //var response = instance.ResxPost(resxFileRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test SpreadsheetsPost
        /// </summary>
        [Fact]
        public void SpreadsheetsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SpreadsheetFileRequest spreadsheetFileRequest = null;
            //var response = instance.SpreadsheetsPost(spreadsheetFileRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test TextPost
        /// </summary>
        [Fact]
        public void TextPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TextRequest textRequest = null;
            //var response = instance.TextPost(textRequest);
            //Assert.IsType<StatusResponse>(response);
        }

        /// <summary>
        /// Test TextRequestIdGet
        /// </summary>
        [Fact]
        public void TextRequestIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestId = null;
            //var response = instance.TextRequestIdGet(requestId);
            //Assert.IsType<CloudTextResponse>(response);
        }
    }
}
